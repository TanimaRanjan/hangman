{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/index.js","webpack:///./src/hangman.js","webpack:///./src/request.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","puzzleEl","document","querySelector","guessEl","game1","window","addEventListener","e","makeGuess","render","innerHTML","textContent","statusMessage","puzzle","split","forEach","letter","letterEl","createElement","appendChild","startGame","_ref","_asyncToGenerator","regeneratorRuntime","mark","_callee","wrap","_context","prev","next","_request2","default","sent","Hangman","stop","undefined","apply","this","arguments","word","remainingGuesses","_classCallCheck","originalWord","toLowerCase","guessed","status","guess","isUnique","includes","isBadGuess","push","getStatus","_this","count","length","console","log","_this2","join","getPuzzle","wordCount","response","data","fetch","json","abrupt","Error","_x"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import Hangman from './hangman'\nimport getPuzzle from './request'\n\nconst puzzleEl = document.querySelector('#puzzle')\nconst guessEl = document.querySelector('#guesses')\nlet game1 \n\nwindow.addEventListener('keypress', (e) => {\n  game1.makeGuess(e.key)\n  render()\n})\n\nconst render = () => {\n  puzzleEl.innerHTML = ''\n  guessEl.textContent = game1.statusMessage \n  game1.puzzle.split('').forEach((letter) => {\n    const letterEl = document.createElement('span')\n    letterEl.textContent = letter\n    puzzleEl.appendChild(letterEl)\n  })\n}\n\nconst startGame = async () => {\n  const puzzle = await getPuzzle('2')\n  game1 = new Hangman(puzzle, 8)\n  render()\n}\n\ndocument.querySelector('#reset').addEventListener('click', startGame)\n\nstartGame()\n","class Hangman {\n    constructor(word, remainingGuesses) {\n        this.originalWord = word\n        this.word = word.toLowerCase().split('')\n        this.guessed = [] //guessed.toLowerCase().split('')\n        this.remainingGuesses = remainingGuesses\n        this.status = 'Playing'\n        \n    }\n    get puzzle() {\n        let puzzle = ''\n        this.word.forEach(letter => {\n            if(this.guessed.includes(letter) || letter === ' ') {\n                puzzle += letter\n            } else {\n                puzzle +=  '*'\n            }\n        });\n        return puzzle;\n    }\n    makeGuess(guess)  {\n        guess = guess.toLowerCase()\n        const isUnique = !this.guessed.includes(guess)\n        const isBadGuess = !this.word.includes(guess)\n        if(this.status !== 'Playing') {\n            return\n        }\n    \n        if(isUnique) {\n            this.guessed.push(guess)\n        }\n        if(isUnique && isBadGuess) {\n            this.remainingGuesses--;\n        }\n        this.getStatus()\n    }\n    getStatus() {\n        let count = 0\n        this.word.forEach(letter => {\n            if(this.guessed.includes(letter) || letter === ' ') {\n                count++\n            } \n        });\n    \n        if(count === this.word.length) {\n            this.status = 'Finished'\n        }\n        if(this.remainingGuesses === 0) {\n            this.status = 'Failed'\n        }\n        console.log(this.status)\n    }\n    get statusMessage() {\n        if(this.status === 'Playing') {\n            return `Guesses left: ${this.remainingGuesses}`\n        } else if(this.status === 'Finished') {\n            return `Great work! You Guessed the word`\n        } else if(this.status === 'Failed') {\n            return `Nice try! The word was \"${this.word.join('')}\"`\n        }\n        \n    }\n}\n\nexport { Hangman as default }","const getPuzzle = async (wordCount) => {\n    const response = await fetch(`http://puzzle.mead.io/puzzle?wordCount=${wordCount}`)\n    if(response.status === 200) {\n        const data = await response.json()\n        return data.puzzle\n    } else {\n       throw new Error('Unable to fetch puzzle')   \n    }\n}\n\n// const getPuzzle = (wordCount) => new Promise((resolve, reject) => {\n//     const request = new XMLHttpRequest()\n    \n//     request.addEventListener('readystatechange', (e) => {\n//         if(e.target.readyState === 4 && e.target.status === 200) {\n//             const data = JSON.parse(e.target.responseText)\n//             resolve(data.puzzle)\n            \n//         } else if(e.target.status === 400) {\n//             reject('An Error has taken place')\n//         }\n//     })\n//     request.open('GET', `http://puzzle.mead.io/puzzle?wordCount=${wordCount}`)\n//     request.send()\n// })\n\n\nexport { getPuzzle as default } \n\n"],"sourceRoot":""}